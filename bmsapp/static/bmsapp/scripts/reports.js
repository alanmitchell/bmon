// Generated by CoffeeScript 1.12.7
(function() {
  var REFRESH_MS, _auto_recalc, _loading_inputs, _refresh_timer, get_embed_link, handleUrlQuery, inputs_changed, process_chart_change, serializedInputs, setCustomDateVis, set_visibility, update_bldg_list, update_chart_sensor_lists, update_group_list, update_results, urlQueryString,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _auto_recalc = true;

  _loading_inputs = false;

  inputs_changed = function() {
    if ($('#select_sensor_multi').prop('disabled') === false) {
      $('#select_sensor_multi').selectpicker('refresh');
    }
    if (_auto_recalc && !_loading_inputs) {
      if (urlQueryString() === '') {
        history.replaceState(null, null, "?".concat(serializedInputs()));
      } else if (serializedInputs() !== urlQueryString()) {
        history.pushState(null, null, "?".concat(serializedInputs()));
      }
      return update_results();
    }
  };

  serializedInputs = function() {
    return $("select, input").serialize();
  };

  update_results = function() {
    var results_id;
    $("body").css("cursor", "wait");
    if ($("#select_chart").val() === "0") {
      results_id = "results-full-width";
      $("#results").hide();
    } else {
      results_id = "results";
      $("#results").show();
    }
    $('#results [data-toggle="tooltip"]').tooltip('hide');
    $('#results-full-width [data-toggle="tooltip"]').tooltip('hide');
    $("#results").empty();
    $("#results-full-width").empty();
    return $.getJSON($("#BaseURL").text() + "reports/results/", serializedInputs()).done(function(results) {
      $("body").css("cursor", "default");
      $("#" + results_id).html(results.html);
      $("#" + results_id + ' [data-toggle="tooltip"]').tooltip();
      $("#" + results_id + " .bmon-sensor-id").attr("data-toggle", "tooltip").attr("data-original-title", "Click to copy Sensor ID to Clipboard").css("cursor", "pointer").tooltip().click(function() {
        var target;
        target = this;
        navigator.clipboard.writeText(target.innerText).then(function() {
          $(target).attr("data-original-title", "Copied Sensor ID to Clipboard!").tooltip('show');
        });
      }).on('hidden.bs.tooltip', function() {
        $(this).attr("data-original-title", "Click to copy Sensor ID to Clipboard");
      });
      return $.each(results.objects, function(ix, obj) {
        var obj_config, obj_type;
        obj_type = obj[0], obj_config = obj[1];
        switch (obj_type) {
          case 'plotly':
            return Plotly.plot(obj_config.renderTo, obj_config.data, obj_config.layout, obj_config.config);
          case 'dashboard':
            return ANdash.createDashboard(obj_config);
        }
      });
    }).fail(function(jqxhr, textStatus, error) {
      var err;
      $("body").css("cursor", "default");
      err = textStatus + ", " + error;
      return alert("Error Occurred: " + err);
    });
  };

  get_embed_link = function() {
    var link_comment, link_dialog, link_text, title;
    title = document.getElementById("report_title");
    if (title !== null) {
      link_comment = "<!--- Embedded BMON Chart: " + title.innerText + " --->";
    } else {
      link_comment = "<!--- Embedded BMON Chart --->";
    }
    link_text = '<script src="' + $("#BaseURL").text() + 'reports/embed/' + '?' + serializedInputs() + '" async></script>';
    link_dialog = $("<div class='popup' title='Copy and paste this text to embed this view in a Custom Report:'><textarea id='embed_link' rows=5 style='width: 99%;font-size: 85%;resize: vertical'>" + link_comment + "&#010;" + link_text + "&#010;</textarea></div>");
    return $('#embed_link').text(link_comment + '\n' + link_text + '\n');
  };

  set_visibility = function(ctrl_list, show) {
    var ctrl, element, i, len;
    for (i = 0, len = ctrl_list.length; i < len; i++) {
      ctrl = ctrl_list[i];
      element = document.getElementById($.trim(ctrl));
      if (show) {
        $(element).show().find("select, input:visible").prop("disabled", false);
      } else {
        $(element).hide().find("select, input").prop("disabled", true);
      }
      $("#report-container").removeClass("d-none");
      $("#report-container").removeClass("d-block");
      $("#report-container").addClass("d-block");
    }
    return show;
  };

  REFRESH_MS = 600000;

  _refresh_timer = setInterval(update_results, REFRESH_MS);

  process_chart_change = function() {
    var multi, selected_chart_option, sensor_val, single, vis_ctrls;
    set_visibility(['refresh', 'ctrl_sensor', 'ctrl_avg', 'ctrl_avg_export', 'ctrl_normalize', 'ctrl_occupied', 'xy_controls', 'time_period_group', 'download_many', 'get_embed_link', 'ctrl_use_rolling_averaging'], false);
    selected_chart_option = $("#select_chart").find("option:selected");
    vis_ctrls = selected_chart_option.data("ctrls").split(",");
    set_visibility(vis_ctrls, true);
    clearInterval(_refresh_timer);
    if (selected_chart_option.data("timed_refresh") === 1) {
      _refresh_timer = setInterval(update_results, REFRESH_MS);
    }
    _auto_recalc = selected_chart_option.data("auto_recalc") === 1;
    single = $('#select_sensor');
    multi = $('#select_sensor_multi');
    if (selected_chart_option.data("multi_sensor") === 1) {
      sensor_val = single.val();
      single.prop('disabled', true);
      single.hide();
      multi.selectpicker('show');
      multi.prop('disabled', false);
      multi.selectpicker('val', [sensor_val]);
      multi.selectpicker('refresh');
      multi.off().change(inputs_changed);
      $('#label_sensor').html('Select Sensors to Plot:');
    } else {
      sensor_val = multi.selectpicker('val')[0];
      multi.prop('disabled', true);
      multi.selectpicker('hide');
      single.show();
      single.prop('disabled', false);
      single.val(sensor_val);
      single.off().change(inputs_changed);
      $('#label_sensor').html('Select Sensor to Plot:');
    }
    if ($('#select_sensor_y').prop('disabled') === false) {
      $('#select_sensor_y').val(sensor_val);
    }
    if (_auto_recalc === false) {
      $("#results").empty();
    }
    if (_auto_recalc === false) {
      $("#results-full-width").empty();
    }
    return inputs_changed();
  };

  update_chart_sensor_lists = function(event) {
    var url;
    url = ($("#BaseURL").text()) + "chart-sensor-list/" + ($("#select_org").val()) + "/" + ($("#select_bldg").val()) + "/";
    return $.ajax({
      url: url,
      dataType: "json",
      async: !_loading_inputs,
      success: function(data) {
        $("#select_chart").html(data.charts);
        $("#select_sensor").html(data.sensors);
        $("#select_sensor_multi").html(data.sensors);
        $("#select_sensor_x").html(data.sensors);
        $("#select_sensor_y").html(data.sensors);
        return process_chart_change();
      }
    });
  };

  update_group_list = function() {
    var url;
    url = ($("#BaseURL").text()) + "group-list/" + ($("#select_org").val()) + "/";
    return $.ajax({
      url: url,
      dataType: "html",
      async: !_loading_inputs,
      success: function(data) {
        $("#select_group").html(data);
        if (!_loading_inputs) {
          $("#select_group").trigger("change");
        }
        if (document.getElementById("select_group").length > 1) {
          return $('#group_controls').show();
        } else {
          return $('#group_controls').hide();
        }
      }
    });
  };

  update_bldg_list = function() {
    var url;
    url = ($("#BaseURL").text()) + "bldg-list/" + ($("#select_org").val()) + "/" + ($("#select_group").val()) + "/";
    return $.ajax({
      url: url,
      dataType: "html",
      async: !_loading_inputs,
      success: function(data) {
        $("#select_bldg").html(data);
        if (!_loading_inputs) {
          return $("#select_bldg").trigger("change");
        }
      }
    });
  };

  $(window).on("popstate", function(event) {
    handleUrlQuery();
    return update_results();
  });

  urlQueryString = function() {
    var queryStart, url;
    url = window.location.href;
    queryStart = url.indexOf('?') + 1;
    if (queryStart > 0) {
      return url.substr(queryStart);
    } else {
      return '';
    }
  };

  handleUrlQuery = function() {
    var element, i, len, name, new_value, old_value, params, sortedNames;
    params = {};
    $.each(urlQueryString().replace(/\+/g, '%20').split('&'), function() {
      var name, name_value, value;
      name_value = this.split('=');
      name = decodeURIComponent(name_value[0]);
      value = name_value.length > 1 ? decodeURIComponent(name_value[1]) : null;
      if (!(name in params)) {
        params[name] = [];
      }
      params[name].push(value);
    });
    sortedNames = (function() {
      var name, names;
      names = ['select_org', 'select_group', 'select_bldg', 'select_chart'];
      for (name in params) {
        if (indexOf.call(names, name) < 0) {
          names.push(name);
        }
      }
      return names;
    })();
    _loading_inputs = true;
    for (i = 0, len = sortedNames.length; i < len; i++) {
      name = sortedNames[i];
      element = $('[name=\'' + name + '\']');
      if (params.hasOwnProperty(name) && element.length > 0) {
        new_value = params[name];
        if (element[0].getAttribute("type") === "radio") {
          old_value = element.filter(":radio:checked").val();
        } else if (element[0].getAttribute("type") === "checkbox") {
          old_value = "needs update";
        } else {
          old_value = element.val();
        }
        if (old_value != new_value) {
          if (element[0].getAttribute("type") === "radio") {
            element.val([new_value]);
            if (element[0].getAttribute("name") === "time_period") {
              element.parent().removeClass("active");
              $('input[name=time_period]:checked').parent().addClass("active");
            }
          } else if (element[0].getAttribute("type") === "checkbox") {
            element.prop('checked', true);
          } else if (element.hasClass('selectpicker')) {
            element.selectpicker('val', new_value);
          } else {
            element.val(new_value);
          }
        }
      }
      element.change();
    }
    _loading_inputs = false;
    return params;
  };

  setCustomDateVis = function() {
    if ($("input:radio[name=time_period]:checked").val() !== "custom") {
      return $("#custom_dates").hide().find("select, input").prop("disabled", true);
    } else {
      return $("#custom_dates").show().find("select, input").prop("disabled", false);
    }
  };

  $(function() {
    var ctrl, ctrls, d, i, len;
    $('#start_date').datepicker({
      uiLibrary: 'bootstrap4'
    });
    $('#end_date').datepicker({
      uiLibrary: 'bootstrap4'
    });
    d = new Date();
    $("#start_date").val((d.getMonth() + 1) + "/" + d.getDate() + "/" + d.getFullYear());
    $(document).on('change', 'input:radio[name="time_period"]', setCustomDateVis);
    setCustomDateVis();
    $("#refresh").click(update_results);
    $("#get_embed_link").click(get_embed_link);
    $("#div_date").datepicker({
      uiLibrary: 'bootstrap4'
    });
    $("#download_many").button().click(function() {
      return window.location.href = (($("#BaseURL").text()) + "reports/results/?") + serializedInputs();
    });
    $("#select_org").change(update_bldg_list);
    $("#select_org").change(update_group_list);
    $("#select_group").change(update_bldg_list);
    $("#select_bldg").change(update_chart_sensor_lists);
    $("#select_chart").change(process_chart_change);
    ctrls = ['averaging_time', 'averaging_time_export', 'normalize', 'use_rolling_averaging', 'show_occupied', 'select_sensor', 'select_sensor_x', 'select_sensor_y', 'averaging_time_xy', 'div_date', 'start_date', 'end_date'];
    for (i = 0, len = ctrls.length; i < len; i++) {
      ctrl = ctrls[i];
      $("#" + ctrl).change(inputs_changed);
    }
    $(document).on('change', 'input:radio[name="time_period"]', inputs_changed);
    handleUrlQuery();
    history.replaceState(null, null, "?".concat(serializedInputs()));
    return inputs_changed();
  });

}).call(this);
